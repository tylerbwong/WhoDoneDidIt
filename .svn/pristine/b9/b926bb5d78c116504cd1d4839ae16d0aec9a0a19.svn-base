package whodonedidit.gui;

import java.awt.event.KeyEvent;
import javax.swing.JButton;

/**
 *
 * @author Tyler Wong
 */
public class MainMenuPanel extends javax.swing.JPanel
{

    private MainFrame frame;
    private static final int numButtons = 4;
    private JButton[] buttons = new JButton[numButtons];
    private int currIndex = 0;

    /**
     * Creates new form MainMenu
     */
    public MainMenuPanel(MainFrame frame)
    {
        this.frame = frame;
        initComponents();
        this.singlePlayerButton.requestFocus();
        this.buttons[0] = this.singlePlayerButton;
        this.buttons[1] = this.multiPlayerButton;
        this.buttons[2] = this.rulesButton;
        this.buttons[3] = this.exitButton;
    }

    public JButton getSinglePlayerButton()
    {
        return this.singlePlayerButton;
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        titleLabel = new javax.swing.JLabel();
        singlePlayerButton = new javax.swing.JButton();
        multiPlayerButton = new javax.swing.JButton();
        rulesButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1024, 768));
        setMinimumSize(new java.awt.Dimension(1024, 768));
        setPreferredSize(new java.awt.Dimension(1024, 768));
        setSize(new java.awt.Dimension(1024, 768));

        titleLabel.setBackground(new java.awt.Color(255, 255, 255));
        titleLabel.setFont(new java.awt.Font("Roboto", 1, 48)); // NOI18N
        titleLabel.setText("Who Done Did It?");

        singlePlayerButton.setBackground(new java.awt.Color(255, 255, 255));
        singlePlayerButton.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        singlePlayerButton.setText(" Play Single Player Game");
        singlePlayerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        singlePlayerButton.setRolloverEnabled(true);
        singlePlayerButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                singlePlayerButtonMouseEntered(evt);
            }
        });
        singlePlayerButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                singlePlayerButtonActionPerformed(evt);
            }
        });
        singlePlayerButton.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                singlePlayerButtonKeyPressed(evt);
            }
        });

        multiPlayerButton.setBackground(new java.awt.Color(255, 255, 255));
        multiPlayerButton.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        multiPlayerButton.setText("Play Multiplayer Game");
        multiPlayerButton.setRolloverEnabled(true);
        multiPlayerButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                multiPlayerButtonMouseEntered(evt);
            }
        });
        multiPlayerButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                multiPlayerButtonActionPerformed(evt);
            }
        });
        multiPlayerButton.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                multiPlayerButtonKeyPressed(evt);
            }
        });

        rulesButton.setBackground(new java.awt.Color(255, 255, 255));
        rulesButton.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        rulesButton.setText("Display Rules");
        rulesButton.setRolloverEnabled(true);
        rulesButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                rulesButtonMouseEntered(evt);
            }
        });
        rulesButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rulesButtonActionPerformed(evt);
            }
        });
        rulesButton.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                rulesButtonKeyPressed(evt);
            }
        });

        exitButton.setBackground(new java.awt.Color(255, 255, 255));
        exitButton.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        exitButton.setText("Exit");
        exitButton.setRolloverEnabled(true);
        exitButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                exitButtonMouseEntered(evt);
            }
        });
        exitButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                exitButtonActionPerformed(evt);
            }
        });
        exitButton.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                exitButtonKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(392, 392, 392)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(multiPlayerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(singlePlayerButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(rulesButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(exitButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(327, 327, 327)
                        .add(titleLabel)))
                .addContainerGap(329, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(276, 276, 276)
                .add(titleLabel)
                .add(18, 18, 18)
                .add(singlePlayerButton)
                .add(6, 6, 6)
                .add(multiPlayerButton)
                .add(6, 6, 6)
                .add(rulesButton)
                .add(6, 6, 6)
                .add(exitButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void singlePlayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singlePlayerButtonActionPerformed
        this.frame.removePanel(this);
        this.frame.createScreenNamePanel(false);
    }//GEN-LAST:event_singlePlayerButtonActionPerformed

    private void multiPlayerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiPlayerButtonActionPerformed
        this.frame.removePanel(this);
        this.frame.createScreenNamePanel(true);
    }//GEN-LAST:event_multiPlayerButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void rulesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rulesButtonActionPerformed
        this.frame.removePanel(this);
        this.frame.createRulesPanel(false, null);
    }//GEN-LAST:event_rulesButtonActionPerformed

    private void singlePlayerButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_singlePlayerButtonKeyPressed
        switch (evt.getKeyCode())
        {
            case KeyEvent.VK_UP:
                if (this.currIndex == 0)
                {
                    this.currIndex = numButtons - 1;
                    this.buttons[this.currIndex].requestFocus();
                }
                else
                {
                    this.currIndex--;
                    this.buttons[this.currIndex].requestFocus();
                }
                break;
            case KeyEvent.VK_DOWN:
                if (this.currIndex == numButtons - 1)
                {
                    this.currIndex = 0;
                    this.buttons[this.currIndex].requestFocus();
                }
                else
                {
                    this.currIndex++;
                    this.buttons[this.currIndex].requestFocus();
                }
                break;
        }
    }//GEN-LAST:event_singlePlayerButtonKeyPressed

    private void multiPlayerButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_multiPlayerButtonKeyPressed
        switch (evt.getKeyCode())
        {
            case KeyEvent.VK_UP:
                if (this.currIndex == 0)
                {
                    this.currIndex = numButtons - 1;
                    this.buttons[this.currIndex].requestFocus();
                }
                else
                {
                    this.currIndex--;
                    this.buttons[this.currIndex].requestFocus();
                }
                break;
            case KeyEvent.VK_DOWN:
                if (this.currIndex == numButtons - 1)
                {
                    this.currIndex = 0;
                    this.buttons[this.currIndex].requestFocus();
                }
                else
                {
                    this.currIndex++;
                    this.buttons[this.currIndex].requestFocus();
                }
                break;
        }
    }//GEN-LAST:event_multiPlayerButtonKeyPressed

    private void rulesButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rulesButtonKeyPressed
        switch (evt.getKeyCode())
        {
            case KeyEvent.VK_UP:
                if (this.currIndex == 0)
                {
                    this.currIndex = numButtons - 1;
                    this.buttons[this.currIndex].requestFocus();
                }
                else
                {
                    this.currIndex--;
                    this.buttons[this.currIndex].requestFocus();
                }
                break;
            case KeyEvent.VK_DOWN:
                if (this.currIndex == numButtons - 1)
                {
                    this.currIndex = 0;
                    this.buttons[this.currIndex].requestFocus();
                }
                else
                {
                    this.currIndex++;
                    this.buttons[this.currIndex].requestFocus();
                }
                break;
        }
    }//GEN-LAST:event_rulesButtonKeyPressed

    private void exitButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_exitButtonKeyPressed
        switch (evt.getKeyCode())
        {
            case KeyEvent.VK_UP:
                if (this.currIndex == 0)
                {
                    this.currIndex = numButtons - 1;
                    this.buttons[this.currIndex].requestFocus();
                }
                else
                {
                    this.currIndex--;
                    this.buttons[this.currIndex].requestFocus();
                }
                break;
            case KeyEvent.VK_DOWN:
                if (this.currIndex == numButtons - 1)
                {
                    this.currIndex = 0;
                    this.buttons[this.currIndex].requestFocus();
                }
                else
                {
                    this.currIndex++;
                    this.buttons[this.currIndex].requestFocus();
                }
                break;
        }
    }//GEN-LAST:event_exitButtonKeyPressed

    private void singlePlayerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_singlePlayerButtonMouseEntered
        this.currIndex = 0;
        this.buttons[this.currIndex].requestFocus();
    }//GEN-LAST:event_singlePlayerButtonMouseEntered

    private void multiPlayerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_multiPlayerButtonMouseEntered
        this.currIndex = 1;
        this.buttons[this.currIndex].requestFocus();
    }//GEN-LAST:event_multiPlayerButtonMouseEntered

    private void rulesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rulesButtonMouseEntered
        this.currIndex = 2;
        this.buttons[this.currIndex].requestFocus();
    }//GEN-LAST:event_rulesButtonMouseEntered

    private void exitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseEntered
        this.currIndex = 3;
        this.buttons[this.currIndex].requestFocus();
    }//GEN-LAST:event_exitButtonMouseEntered
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JButton multiPlayerButton;
    private javax.swing.JButton rulesButton;
    private javax.swing.JButton singlePlayerButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
