<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Source code</title>
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<div class="sourceContainer">
<pre><span class="sourceLineNo">001</span>package whodonedidit.skeletons;<a name="line.1"></a>
<span class="sourceLineNo">002</span><a name="line.2"></a>
<span class="sourceLineNo">003</span>/**<a name="line.3"></a>
<span class="sourceLineNo">004</span> * TimerRunnable<a name="line.4"></a>
<span class="sourceLineNo">005</span> * This class represents a timer that can run on a separate thread and informs<a name="line.5"></a>
<span class="sourceLineNo">006</span> * a listener when a specified time is reached. The timer only has a resolution<a name="line.6"></a>
<span class="sourceLineNo">007</span> * of 100ms, so don't expect to use it for any precise timing.<a name="line.7"></a>
<span class="sourceLineNo">008</span> * Operations:<a name="line.8"></a>
<span class="sourceLineNo">009</span> * A TimerRunnable can have its time limit set.<a name="line.9"></a>
<span class="sourceLineNo">010</span> * A TimerRunnable can be reset.<a name="line.10"></a>
<span class="sourceLineNo">011</span> * A TimerRunnable can be started.<a name="line.11"></a>
<span class="sourceLineNo">012</span> * A TimerRunnable can be stopped.<a name="line.12"></a>
<span class="sourceLineNo">013</span> * @author Markus<a name="line.13"></a>
<span class="sourceLineNo">014</span> * @version 0.0<a name="line.14"></a>
<span class="sourceLineNo">015</span> * @since 28-Oct-2015<a name="line.15"></a>
<span class="sourceLineNo">016</span> */<a name="line.16"></a>
<span class="sourceLineNo">017</span>public class TimerRunnable implements Runnable<a name="line.17"></a>
<span class="sourceLineNo">018</span>{<a name="line.18"></a>
<span class="sourceLineNo">019</span>    /** Time in ms between checks to see if the timeLimit has been reached */<a name="line.19"></a>
<span class="sourceLineNo">020</span>    private static final int kTimerResolution = 100;<a name="line.20"></a>
<span class="sourceLineNo">021</span><a name="line.21"></a>
<span class="sourceLineNo">022</span>    /** The time in seconds since the timer began counting **/<a name="line.22"></a>
<span class="sourceLineNo">023</span>    private double time;<a name="line.23"></a>
<span class="sourceLineNo">024</span><a name="line.24"></a>
<span class="sourceLineNo">025</span>    /** <a name="line.25"></a>
<span class="sourceLineNo">026</span>     *  The time in seconds at which the listener will be notified of a <a name="line.26"></a>
<span class="sourceLineNo">027</span>     *  timeout <a name="line.27"></a>
<span class="sourceLineNo">028</span>     */<a name="line.28"></a>
<span class="sourceLineNo">029</span>    private double timeLimit;<a name="line.29"></a>
<span class="sourceLineNo">030</span><a name="line.30"></a>
<span class="sourceLineNo">031</span>    /** The listener to notify when the time limit is reached **/<a name="line.31"></a>
<span class="sourceLineNo">032</span>    private TimeoutListener listener;<a name="line.32"></a>
<span class="sourceLineNo">033</span><a name="line.33"></a>
<span class="sourceLineNo">034</span>    /**<a name="line.34"></a>
<span class="sourceLineNo">035</span>     * True if the timer is paused.<a name="line.35"></a>
<span class="sourceLineNo">036</span>     * False if the timer is currently running.<a name="line.36"></a>
<span class="sourceLineNo">037</span>     */<a name="line.37"></a>
<span class="sourceLineNo">038</span>    private boolean paused;<a name="line.38"></a>
<span class="sourceLineNo">039</span><a name="line.39"></a>
<span class="sourceLineNo">040</span>    /**<a name="line.40"></a>
<span class="sourceLineNo">041</span>     * TimerRunnable<a name="line.41"></a>
<span class="sourceLineNo">042</span>     * @param listener the listener to be notified when the time limit is<a name="line.42"></a>
<span class="sourceLineNo">043</span>     *                 reached<a name="line.43"></a>
<span class="sourceLineNo">044</span>     * @param timerLimit the time in seconds at which the listener will be<a name="line.44"></a>
<span class="sourceLineNo">045</span>     *                   notified of a timeout<a name="line.45"></a>
<span class="sourceLineNo">046</span>     */<a name="line.46"></a>
<span class="sourceLineNo">047</span>    public TimerRunnable(TimeoutListener listener, int timerLimit)<a name="line.47"></a>
<span class="sourceLineNo">048</span>    {<a name="line.48"></a>
<span class="sourceLineNo">049</span>        // SET this TimerRunnable's "listener" to the argued "listener"<a name="line.49"></a>
<span class="sourceLineNo">050</span>        // SET this TimerRunnable's "timeLimit" to the argued "timerLimit"<a name="line.50"></a>
<span class="sourceLineNo">051</span>        // SET "time" to 0<a name="line.51"></a>
<span class="sourceLineNo">052</span>        // SET "paused" to true<a name="line.52"></a>
<span class="sourceLineNo">053</span>    }<a name="line.53"></a>
<span class="sourceLineNo">054</span><a name="line.54"></a>
<span class="sourceLineNo">055</span>    /**<a name="line.55"></a>
<span class="sourceLineNo">056</span>     * run<a name="line.56"></a>
<span class="sourceLineNo">057</span>     * Runs the timer. This method should not be called by the architecture,<a name="line.57"></a>
<span class="sourceLineNo">058</span>     * but will be called during the creation of its own thread.<a name="line.58"></a>
<span class="sourceLineNo">059</span>     */<a name="line.59"></a>
<span class="sourceLineNo">060</span>    @Override<a name="line.60"></a>
<span class="sourceLineNo">061</span>    public void run()<a name="line.61"></a>
<span class="sourceLineNo">062</span>    {<a name="line.62"></a>
<span class="sourceLineNo">063</span>        // WHILE forever<a name="line.63"></a>
<span class="sourceLineNo">064</span>            // Wait for "kTimerResolution" milliseconds<a name="line.64"></a>
<span class="sourceLineNo">065</span>            // ADD "kTimerResolution" to "time"<a name="line.65"></a>
<span class="sourceLineNo">066</span>            // IF "time" is greater than "timeLimit"<a name="line.66"></a>
<span class="sourceLineNo">067</span>                // CALL this timer's reset method<a name="line.67"></a>
<span class="sourceLineNo">068</span>                // CALL listener's respondToTimeout method<a name="line.68"></a>
<span class="sourceLineNo">069</span>            // END IF<a name="line.69"></a>
<span class="sourceLineNo">070</span>        // END WHILE<a name="line.70"></a>
<span class="sourceLineNo">071</span>    }<a name="line.71"></a>
<span class="sourceLineNo">072</span><a name="line.72"></a>
<span class="sourceLineNo">073</span>    /**<a name="line.73"></a>
<span class="sourceLineNo">074</span>     * reset<a name="line.74"></a>
<span class="sourceLineNo">075</span>     * Resets the timer, setting its time back to zero.<a name="line.75"></a>
<span class="sourceLineNo">076</span>     */<a name="line.76"></a>
<span class="sourceLineNo">077</span>    public void reset()<a name="line.77"></a>
<span class="sourceLineNo">078</span>    {<a name="line.78"></a>
<span class="sourceLineNo">079</span>        // SET "paused" to true <a name="line.79"></a>
<span class="sourceLineNo">080</span>        // SET "time" to 0<a name="line.80"></a>
<span class="sourceLineNo">081</span>    }<a name="line.81"></a>
<span class="sourceLineNo">082</span><a name="line.82"></a>
<span class="sourceLineNo">083</span>    /**<a name="line.83"></a>
<span class="sourceLineNo">084</span>     * start<a name="line.84"></a>
<span class="sourceLineNo">085</span>     * Starts the timer.<a name="line.85"></a>
<span class="sourceLineNo">086</span>     */<a name="line.86"></a>
<span class="sourceLineNo">087</span>    public void start()<a name="line.87"></a>
<span class="sourceLineNo">088</span>    {<a name="line.88"></a>
<span class="sourceLineNo">089</span>        // SET "paused" to false <a name="line.89"></a>
<span class="sourceLineNo">090</span>    }<a name="line.90"></a>
<span class="sourceLineNo">091</span><a name="line.91"></a>
<span class="sourceLineNo">092</span>    /**<a name="line.92"></a>
<span class="sourceLineNo">093</span>     * stop<a name="line.93"></a>
<span class="sourceLineNo">094</span>     * Pauses the timer.<a name="line.94"></a>
<span class="sourceLineNo">095</span>     */<a name="line.95"></a>
<span class="sourceLineNo">096</span>    public void stop()<a name="line.96"></a>
<span class="sourceLineNo">097</span>    {<a name="line.97"></a>
<span class="sourceLineNo">098</span>        // SET "paused" to true<a name="line.98"></a>
<span class="sourceLineNo">099</span>    }<a name="line.99"></a>
<span class="sourceLineNo">100</span>}<a name="line.100"></a>




























































</pre>
</div>
</body>
</html>
