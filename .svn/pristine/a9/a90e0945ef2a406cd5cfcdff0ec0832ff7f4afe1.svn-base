<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html lang="en">
<head>
<title>Source code</title>
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
</head>
<body>
<div class="sourceContainer">
<pre><span class="sourceLineNo">001</span>package whodonedidit.skeletons;<a name="line.1"></a>
<span class="sourceLineNo">002</span><a name="line.2"></a>
<span class="sourceLineNo">003</span>import java.util.List;<a name="line.3"></a>
<span class="sourceLineNo">004</span><a name="line.4"></a>
<span class="sourceLineNo">005</span>/**<a name="line.5"></a>
<span class="sourceLineNo">006</span> * Deck is used to create all of clue cards and action cards being used by the <a name="line.6"></a>
<span class="sourceLineNo">007</span> * game. After the clue cards have been dealt out, the deck serves to hold all <a name="line.7"></a>
<span class="sourceLineNo">008</span> * of the remaining action cards that haven't been drawn yet.<a name="line.8"></a>
<span class="sourceLineNo">009</span> * <a name="line.9"></a>
<span class="sourceLineNo">010</span> * @author Hayden - skeleton, javadocs, pseudocode<a name="line.10"></a>
<span class="sourceLineNo">011</span> * @version 0.0<a name="line.11"></a>
<span class="sourceLineNo">012</span> * @since 25-Oct-2015<a name="line.12"></a>
<span class="sourceLineNo">013</span> */<a name="line.13"></a>
<span class="sourceLineNo">014</span>public class Deck<a name="line.14"></a>
<span class="sourceLineNo">015</span>{<a name="line.15"></a>
<span class="sourceLineNo">016</span>    /**List of ClueCard objects being held by the deck*/<a name="line.16"></a>
<span class="sourceLineNo">017</span>    private List&lt;ClueCard&gt; clueCards;<a name="line.17"></a>
<span class="sourceLineNo">018</span>    /**List of ActionCards being held by the deck.*/<a name="line.18"></a>
<span class="sourceLineNo">019</span>    private List&lt;ActionCard&gt; actionCards;<a name="line.19"></a>
<span class="sourceLineNo">020</span>    /**Integer to point at the first clue card in the clueCards list*/<a name="line.20"></a>
<span class="sourceLineNo">021</span>    private int topClueCard;<a name="line.21"></a>
<span class="sourceLineNo">022</span>    /**Integer to point at the first action card in the actionCards list*/<a name="line.22"></a>
<span class="sourceLineNo">023</span>    private int topActionCard;<a name="line.23"></a>
<span class="sourceLineNo">024</span>    <a name="line.24"></a>
<span class="sourceLineNo">025</span>    /**<a name="line.25"></a>
<span class="sourceLineNo">026</span>     * Creates the deck of 21 ClueCards and 39 ActionCards. <a name="line.26"></a>
<span class="sourceLineNo">027</span>     */<a name="line.27"></a>
<span class="sourceLineNo">028</span>    public Deck()<a name="line.28"></a>
<span class="sourceLineNo">029</span>    {<a name="line.29"></a>
<span class="sourceLineNo">030</span>        //INIT clueCards list as a list to hold 21 ClueCards<a name="line.30"></a>
<span class="sourceLineNo">031</span>        //INIT actionCards list as a list to hold 39 ActionCards<a name="line.31"></a>
<span class="sourceLineNo">032</span>        //INIT topClueCard and topActionCard equal to 0<a name="line.32"></a>
<span class="sourceLineNo">033</span>        //CALL populateDeck<a name="line.33"></a>
<span class="sourceLineNo">034</span>    }<a name="line.34"></a>
<span class="sourceLineNo">035</span>    <a name="line.35"></a>
<span class="sourceLineNo">036</span>    /**<a name="line.36"></a>
<span class="sourceLineNo">037</span>     * Shuffles the cards being held in the clueCards and actionCards lists. <a name="line.37"></a>
<span class="sourceLineNo">038</span>     */<a name="line.38"></a>
<span class="sourceLineNo">039</span>    public void shuffle()<a name="line.39"></a>
<span class="sourceLineNo">040</span>    {<a name="line.40"></a>
<span class="sourceLineNo">041</span>        //CALL Collections.shuffle() on the clueCards list   <a name="line.41"></a>
<span class="sourceLineNo">042</span>        //CALL Collections.shuffle() on the actionCards list   <a name="line.42"></a>
<span class="sourceLineNo">043</span>    }<a name="line.43"></a>
<span class="sourceLineNo">044</span>    <a name="line.44"></a>
<span class="sourceLineNo">045</span>    /**<a name="line.45"></a>
<span class="sourceLineNo">046</span>     * Finds the first clue card is this deck that matches the given description.<a name="line.46"></a>
<span class="sourceLineNo">047</span>     * This is mostly used for finding the person, vehicle, and destination to form <a name="line.47"></a>
<span class="sourceLineNo">048</span>     * the solution to the game.<a name="line.48"></a>
<span class="sourceLineNo">049</span>     * <a name="line.49"></a>
<span class="sourceLineNo">050</span>     * @param description of the card requested<a name="line.50"></a>
<span class="sourceLineNo">051</span>     * @return the first ClueCard with a matching description<a name="line.51"></a>
<span class="sourceLineNo">052</span>     */<a name="line.52"></a>
<span class="sourceLineNo">053</span>    public ClueCard findClueCard(List&lt;String&gt; description)<a name="line.53"></a>
<span class="sourceLineNo">054</span>    {<a name="line.54"></a>
<span class="sourceLineNo">055</span>        //FOR the remaining clueCards past topClueCard to the end of the list<a name="line.55"></a>
<span class="sourceLineNo">056</span>            //FOR every index of the description passed<a name="line.56"></a>
<span class="sourceLineNo">057</span>                //IF the clue card being checked does not contain the description being checked<a name="line.57"></a>
<span class="sourceLineNo">058</span>                    //BREAK the loop checking the description, it's not a match<a name="line.58"></a>
<span class="sourceLineNo">059</span>                //ENDIF<a name="line.59"></a>
<span class="sourceLineNo">060</span>                //IF current index equals the size - 1 of the passed description<a name="line.60"></a>
<span class="sourceLineNo">061</span>                    //RETURN the current clue card <a name="line.61"></a>
<span class="sourceLineNo">062</span>                //ENDIF<a name="line.62"></a>
<span class="sourceLineNo">063</span>            //ENDFOR<a name="line.63"></a>
<span class="sourceLineNo">064</span>        //ENDFOR<a name="line.64"></a>
<span class="sourceLineNo">065</span>        //RETURN null if a matching card was not found<a name="line.65"></a>
<span class="sourceLineNo">066</span>        return null;<a name="line.66"></a>
<span class="sourceLineNo">067</span>    }<a name="line.67"></a>
<span class="sourceLineNo">068</span>    <a name="line.68"></a>
<span class="sourceLineNo">069</span>    /**<a name="line.69"></a>
<span class="sourceLineNo">070</span>     * Draws an action card from the front of the actionCards list.<a name="line.70"></a>
<span class="sourceLineNo">071</span>     * <a name="line.71"></a>
<span class="sourceLineNo">072</span>     * @return the ActionCard object being held in the actionCards list<a name="line.72"></a>
<span class="sourceLineNo">073</span>     */<a name="line.73"></a>
<span class="sourceLineNo">074</span>    public ActionCard drawActionCard() <a name="line.74"></a>
<span class="sourceLineNo">075</span>    {<a name="line.75"></a>
<span class="sourceLineNo">076</span>        //IF actionCards list is not empty<a name="line.76"></a>
<span class="sourceLineNo">077</span>            //RETURN action card at index of topActionCard by removing it from the list<a name="line.77"></a>
<span class="sourceLineNo">078</span>            //INCREMENT topActionCard index (could check here if index &gt; size)<a name="line.78"></a>
<span class="sourceLineNo">079</span>        //ENDIF<a name="line.79"></a>
<span class="sourceLineNo">080</span>        //RETURN null if the list is empty<a name="line.80"></a>
<span class="sourceLineNo">081</span>        return null;<a name="line.81"></a>
<span class="sourceLineNo">082</span>    }<a name="line.82"></a>
<span class="sourceLineNo">083</span>    <a name="line.83"></a>
<span class="sourceLineNo">084</span>    /**<a name="line.84"></a>
<span class="sourceLineNo">085</span>     * Draws a clue card from the front of this deck's clueCards list.<a name="line.85"></a>
<span class="sourceLineNo">086</span>     * <a name="line.86"></a>
<span class="sourceLineNo">087</span>     * @return the ClueCard object being held in the clueCards list<a name="line.87"></a>
<span class="sourceLineNo">088</span>     */<a name="line.88"></a>
<span class="sourceLineNo">089</span>    public ClueCard drawClueCard() <a name="line.89"></a>
<span class="sourceLineNo">090</span>    {<a name="line.90"></a>
<span class="sourceLineNo">091</span>        //IF clueCards list is not empty<a name="line.91"></a>
<span class="sourceLineNo">092</span>            //IF the reference stored in the list at topClueCard is null<a name="line.92"></a>
<span class="sourceLineNo">093</span>                //INCREMENT topClueCard<a name="line.93"></a>
<span class="sourceLineNo">094</span>            //ENDIF<a name="line.94"></a>
<span class="sourceLineNo">095</span>            //INCREMENT topClueCard <a name="line.95"></a>
<span class="sourceLineNo">096</span>            //RETURN clue card at topClueCard - 1 by removing it from the list<a name="line.96"></a>
<span class="sourceLineNo">097</span>        //ENDIF<a name="line.97"></a>
<span class="sourceLineNo">098</span>        //RETURN null if the list is empty.<a name="line.98"></a>
<span class="sourceLineNo">099</span>        return null;<a name="line.99"></a>
<span class="sourceLineNo">100</span>    }<a name="line.100"></a>
<span class="sourceLineNo">101</span>    <a name="line.101"></a>
<span class="sourceLineNo">102</span>    <a name="line.102"></a>
<span class="sourceLineNo">103</span>    /**<a name="line.103"></a>
<span class="sourceLineNo">104</span>     * Adds the passed action card back into the deck's actionCards list.<a name="line.104"></a>
<span class="sourceLineNo">105</span>     * <a name="line.105"></a>
<span class="sourceLineNo">106</span>     * @param card the ActionCard being returned to the deck<a name="line.106"></a>
<span class="sourceLineNo">107</span>     */<a name="line.107"></a>
<span class="sourceLineNo">108</span>    public void addActionCard(ActionCard card) <a name="line.108"></a>
<span class="sourceLineNo">109</span>    {<a name="line.109"></a>
<span class="sourceLineNo">110</span>        //FOR indexes from 0 up to the topActionCard<a name="line.110"></a>
<span class="sourceLineNo">111</span>            //IF the actionCard at the index is empty<a name="line.111"></a>
<span class="sourceLineNo">112</span>                //STORE card into actionCards list at the index<a name="line.112"></a>
<span class="sourceLineNo">113</span>            //ENDIF<a name="line.113"></a>
<span class="sourceLineNo">114</span>        //ENDFOR<a name="line.114"></a>
<span class="sourceLineNo">115</span>    }<a name="line.115"></a>
<span class="sourceLineNo">116</span>    <a name="line.116"></a>
<span class="sourceLineNo">117</span>    /**<a name="line.117"></a>
<span class="sourceLineNo">118</span>     * Adds the clue card back into this deck's clueCards list.<a name="line.118"></a>
<span class="sourceLineNo">119</span>     * <a name="line.119"></a>
<span class="sourceLineNo">120</span>     * @param card the ClueCard object being returned to the deck<a name="line.120"></a>
<span class="sourceLineNo">121</span>     */<a name="line.121"></a>
<span class="sourceLineNo">122</span>    public void addClueCard(ClueCard card)<a name="line.122"></a>
<span class="sourceLineNo">123</span>    {<a name="line.123"></a>
<span class="sourceLineNo">124</span>        //FOR indexes from 0 up to the topClueCard<a name="line.124"></a>
<span class="sourceLineNo">125</span>            //IF the clueCard at the index is empty<a name="line.125"></a>
<span class="sourceLineNo">126</span>                //STORE card into clueCards list at the index<a name="line.126"></a>
<span class="sourceLineNo">127</span>            //ENDIF<a name="line.127"></a>
<span class="sourceLineNo">128</span>        //ENDFOR<a name="line.128"></a>
<span class="sourceLineNo">129</span>    }<a name="line.129"></a>
<span class="sourceLineNo">130</span>    <a name="line.130"></a>
<span class="sourceLineNo">131</span>    /**<a name="line.131"></a>
<span class="sourceLineNo">132</span>     * Generates and stores all of the initial clue cards and action cards for <a name="line.132"></a>
<span class="sourceLineNo">133</span>     * this deck. <a name="line.133"></a>
<span class="sourceLineNo">134</span>     */<a name="line.134"></a>
<span class="sourceLineNo">135</span>    public void populateDeck()<a name="line.135"></a>
<span class="sourceLineNo">136</span>    {<a name="line.136"></a>
<span class="sourceLineNo">137</span>        //FOR all 21 unique ClueCards<a name="line.137"></a>
<span class="sourceLineNo">138</span>            //INIT new ClueCard with its name and description<a name="line.138"></a>
<span class="sourceLineNo">139</span>            //STORE the new card into the clueCards list<a name="line.139"></a>
<span class="sourceLineNo">140</span>        //ENDFOR<a name="line.140"></a>
<span class="sourceLineNo">141</span>        <a name="line.141"></a>
<span class="sourceLineNo">142</span>        //FOR first 10 action cards<a name="line.142"></a>
<span class="sourceLineNo">143</span>            //INIT a suggest from any destination action card<a name="line.143"></a>
<span class="sourceLineNo">144</span>            //STORE the new card into the actionCards list<a name="line.144"></a>
<span class="sourceLineNo">145</span>        //ENDFOR<a name="line.145"></a>
<span class="sourceLineNo">146</span>        //FOR next 9 action cards<a name="line.146"></a>
<span class="sourceLineNo">147</span>            //INIT a suggest from current destination action card<a name="line.147"></a>
<span class="sourceLineNo">148</span>            //STORE the new card into the actionCards list<a name="line.148"></a>
<span class="sourceLineNo">149</span>        //ENDFOR<a name="line.149"></a>
<span class="sourceLineNo">150</span>        //FOR next 4 action cards<a name="line.150"></a>
<span class="sourceLineNo">151</span>            //IF it is past the second iteration of this loop<a name="line.151"></a>
<span class="sourceLineNo">152</span>                //INIT an all snoop left action card<a name="line.152"></a>
<span class="sourceLineNo">153</span>            //ELSE<a name="line.153"></a>
<span class="sourceLineNo">154</span>                //INIT an all snoop right action card<a name="line.154"></a>
<span class="sourceLineNo">155</span>            //STORE the new card into the actionCards list<a name="line.155"></a>
<span class="sourceLineNo">156</span>        //ENDFOR<a name="line.156"></a>
<span class="sourceLineNo">157</span>        //FOR next 6 action cards<a name="line.157"></a>
<span class="sourceLineNo">158</span>            //INIT the specific super sleuth action card<a name="line.158"></a>
<span class="sourceLineNo">159</span>            //STORE the card into the actionCards list<a name="line.159"></a>
<span class="sourceLineNo">160</span>        //ENDFOR<a name="line.160"></a>
<span class="sourceLineNo">161</span>        //FOR last 6 action cards<a name="line.161"></a>
<span class="sourceLineNo">162</span>            //INIT the specific private tip action card<a name="line.162"></a>
<span class="sourceLineNo">163</span>            //STORE the card into the actionCards list<a name="line.163"></a>
<span class="sourceLineNo">164</span>        //ENDFOR<a name="line.164"></a>
<span class="sourceLineNo">165</span>    }<a name="line.165"></a>
<span class="sourceLineNo">166</span>    <a name="line.166"></a>
<span class="sourceLineNo">167</span>    /**<a name="line.167"></a>
<span class="sourceLineNo">168</span>     * Checks to see whether this deck is out of clue cards.<a name="line.168"></a>
<span class="sourceLineNo">169</span>     * <a name="line.169"></a>
<span class="sourceLineNo">170</span>     * @return true if the clueCards list is empty<a name="line.170"></a>
<span class="sourceLineNo">171</span>     */<a name="line.171"></a>
<span class="sourceLineNo">172</span>    public boolean clueIsEmpty()<a name="line.172"></a>
<span class="sourceLineNo">173</span>    {<a name="line.173"></a>
<span class="sourceLineNo">174</span>        //RETURN the result of calling the clueCards isEmpty method<a name="line.174"></a>
<span class="sourceLineNo">175</span>        return clueCards.isEmpty();<a name="line.175"></a>
<span class="sourceLineNo">176</span>    }<a name="line.176"></a>
<span class="sourceLineNo">177</span>    <a name="line.177"></a>
<span class="sourceLineNo">178</span>    /**<a name="line.178"></a>
<span class="sourceLineNo">179</span>     * Checks to see whether this deck is out of action cards.<a name="line.179"></a>
<span class="sourceLineNo">180</span>     * <a name="line.180"></a>
<span class="sourceLineNo">181</span>     * @return true if the actionCards list is empty<a name="line.181"></a>
<span class="sourceLineNo">182</span>     */<a name="line.182"></a>
<span class="sourceLineNo">183</span>    public boolean actionIsEmpty()<a name="line.183"></a>
<span class="sourceLineNo">184</span>    {<a name="line.184"></a>
<span class="sourceLineNo">185</span>        //RETURN the result of calling the actionCards isEmpty method<a name="line.185"></a>
<span class="sourceLineNo">186</span>        return actionCards.isEmpty();<a name="line.186"></a>
<span class="sourceLineNo">187</span>    }<a name="line.187"></a>
<span class="sourceLineNo">188</span>    <a name="line.188"></a>
<span class="sourceLineNo">189</span>  <a name="line.189"></a>
<span class="sourceLineNo">190</span>}<a name="line.190"></a>




























































</pre>
</div>
</body>
</html>
